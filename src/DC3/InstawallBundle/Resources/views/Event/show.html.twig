{% extends '::base.html.twig' %}

{% block stylesheets %}
{% stylesheets
    'bundles/dc3instawall/css/normalize.css'
    'bundles/dc3instawall/css/demo.css'
    'bundles/dc3instawall/css/component.css'
    filter='cssrewrite'
 
%}
		<link href="{{ asset_url }}" rel="stylesheet" />
{% endstylesheets %}
{% endblock %}

{% block body %}

<div class="container">	
	<div class="loadconteneur">
		<div id="loadstate" class="loader">
		<p>Chargement</p>
		</div>	
	</div>
<!-- 	<div class="htag" style="display:none;" >#{{ entity.hTag }}</div> -->
	<section style="display:none;" id="photostack-1" class="photostack ">
		<div>
		{% for pic in pics %}
				<figure data-picid="{{ pic.id }}">	
					<img id="{{ pic.id }}" src="{{ pic.url }}" alt="img01"/>	
					<figcaption>
						<p class="photostack-title"><img src="{{ pic.userPic }}" alt="userpic"><span id="name">{{ pic.userName }}</span><span class="like">{{ pic.likeCount }} j'aime</span></p>
					</figcaption>
				</figure>
		{% endfor %}
		</div>
	</section>
	<div class="htag">#{{ entity.hTag }}</div>
</div>
{% endblock %}

{% block photostack %}
<script>

// supprime les images non chargÃ©s

$( "img" ).load().error(function() {
  	
    $( this ).parent( 'figure' ).remove();	
    	    
});

// affiche le chargement des images

$(window).load(function() {
    
    $(window).resize(function () {location.reload();});
    
    var maxHeight = $(window).height();
    
    $( ".photostack" ).css( "height", maxHeight );
    
    $( '#loadconteneur' ).hide(); // chargement
    
    $( 'div section, .htag' ).show();		 
    
    
   var photostack =  new Photostack(document.getElementById( 'photostack-1' ), {
   		start:'last',
	   callback : function (item) {
	   }
   });    
   
   
/*
   function randomInt(mini, maxi) {
		var nb = mini + (maxi+1-mini)*Math.random();
		return Math.floor(nb);
	}
	
	Array.prototype.shuffle = function(n)
	{
		if(!n)
			n = this.length;
		if(n > 1)
		{
			var i = randomInt(0, n-1);
			var tmp = this[i];
			this[i] = this[n-1];
			this [n-1] = tmp;
			this.shuffle(n-1);
		}
	}
*/
	
/*
	var values = [];
	function newChainRandom(){
		
	
		for (var i = 0; i < photostack.getItems().length; ++i){
	    values.push(i);
		}
		
		//values.shuffle();
		console.log(values);
	}
*/
	

   function reload(b){
   	

		console.log(photostack.getItems().length);
   		var IsNewImage = false;
	   	$.ajax ({
	   		type : "GET",
		 	url: "{{ path('event_refresh', { 'id': entity.id }) }}",
		 	dataType : "json"
		 }).done(function(resp) {
	 		data = resp.pics;
	 		
		 	for(i=0;i<data.length;i++){
			 	
			 	if ($("img[src$='"+data[i].URL+"']").length==0){
			 	IsNewImage = true;
			 		console.log('image  no existe');
				 	var newFigure = $('<figure data-picid="'+data[i].PICID+'"><img src="'+data[i].URL+'" alt="img01"><figcaption><p class="photostack-title"><img src="'+data[i].USERPIC+'" alt="userpic"><span id="name">'+data[i].USERNAME+'</span><span class="like">'+data[i].LIKES+' j\'aime</span></p></figcaption></figure>');
				 	newFigure.hide();
				 		
				 	
				 	var figures = $('#photostack-1 div figure');
				 	console.log(figures);
				 	figures[0].remove();		 	
				 	console.log(figures.length);
					$('#photostack-1 div').append(newFigure);
					
					load_counter = 0;
					$.each(newFigure.find('img'), function(i, item) {
					    $(item).load(function() {
					        load_counter ++;
					        if (load_counter == newFigure.find('img').length) {
					            // all items have loaded
								newFigure.fadeIn();
								delete photostack;
								photostack =  new Photostack(document.getElementById( 'photostack-1' ), {
						   			start:'last'
						   		});
						   		setTimeout(reload, 1000);

					        }
					    });
					})
					break;
			 	} else {
			 		console.log('image existe');				 				 		
			 	}
		 	}
		 	
		 	
		 	
		 	if (!IsNewImage) {
		 		
		
	
		
				console.log('search images');
				
			 	var randomImage = randomImagePS(photostack);
			 			 					
				console.log(randomImage);
				console.log(photostack.getCurrentItem());
			 	var imageShow = $(photostack.getItem(randomImage));		 	
			 	var picid = imageShow.data('picid');
			 	$.ajax ({
			   		type : "GET",
				 	url: "/app_dev.php/pic/"+picid +"/instagram-update",
				 	dataType : "json"
			 	}).done(function(data) {
				 	imageShow.find('.like').html(data.LIKES+' j\'aime');
				 	photostack.open(randomImage);
				 	setTimeout(reload, 1000);


			 	}).error(function(){
				 	//setTimeout(reload, 1000);
			 	});
			 	


		 	}	
	 	});

		 	
	}
	

	reload(0);
	
	function randomImagePS(ps){
		var randomImage = Math.floor(Math.random() * ps.getItems().length);
		
		if(randomImage == photostack.getCurrentItem()) {
			console.log('same');
			return randomImagePS(ps); 	
		}
		else {
			return randomImage;
		}
		
	}
	
});






</script>
{% endblock %}
